{{# def.definitions }}
{{# def.setup }}
{{
  var $it = it.util.copy(it);
  $it.schema = { $ref: '#' };
  $it.level++;
  var $script = 'js_script' + $lvl;
}}

var {{=$newData}} = this.js._evalKeywords.{{=$keyword}}.call(this, {{=$data}}, {{# def.dataPath }});

var {{=$valid}};
if ({{=$newData}} instanceof this.js.Script) {
  var {{=$script}} = {{=$newData}}.script;
  if ({{=$script}} && typeof {{=$script}}.then == 'function') {
    {{=$newData}} = {{=$script}}.then((function ({{=$script}}) {
      {{# def.recursiveValidate }}
      if ({{=$valid}}) return {{=$data}};
      throw new ValidationError(vErrors);
    }).bind(this));
    {{# def.replaceWithNewData }}
    {{=$valid}} = true;
  } else {
    {{# def.recursiveValidate }}
  }
} else {
  {{# def.replaceWithNewData }}
  {{=$valid}} = true;
}
